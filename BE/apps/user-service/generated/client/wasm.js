
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  userId: 'userId',
  email: 'email',
  passwordHash: 'passwordHash',
  address: 'address',
  latitude: 'latitude',
  longitude: 'longitude',
  createdAt: 'createdAt'
};

exports.Prisma.ParentScalarFieldEnum = {
  parentId: 'parentId',
  userId: 'userId',
  name: 'name',
  birthDate: 'birthDate',
  gender: 'gender',
  pinHash: 'pinHash',
  createdAt: 'createdAt',
  avatarMediaId: 'avatarMediaId',
  voiceMediaId: 'voiceMediaId'
};

exports.Prisma.ChildScalarFieldEnum = {
  childId: 'childId',
  userId: 'userId',
  name: 'name',
  birthDate: 'birthDate',
  gender: 'gender',
  createdAt: 'createdAt',
  avatarMediaId: 'avatarMediaId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Parent: 'Parent',
  Child: 'Child'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\SSAFY\\Desktop\\PAI\\S13P21C101\\BE\\apps\\user-service\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\SSAFY\\Desktop\\PAI\\S13P21C101\\BE\\apps\\user-service\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../generated/client\"\n  binaryTargets = [\"native\", \"debian-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  userId       BigInt   @id @default(autoincrement()) @map(\"user_id\")\n  email        String   @unique\n  passwordHash String   @map(\"password_hash\")\n  address      String\n  latitude     Float\n  longitude    Float\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n  children     Child[]\n  parents      Parent[]\n\n  @@map(\"users\")\n}\n\nmodel Parent {\n  parentId      BigInt    @id @default(autoincrement()) @map(\"parent_id\")\n  userId        BigInt    @map(\"user_id\")\n  name          String\n  birthDate     DateTime? @map(\"birth_date\")\n  gender        String?\n  pinHash       String    @map(\"pin_hash\")\n  createdAt     DateTime  @default(now()) @map(\"created_at\")\n  avatarMediaId BigInt?   @map(\"avatar_media_id\")\n  voiceMediaId  String?   @map(\"voice_media_id\")\n  user          User      @relation(fields: [userId], references: [userId])\n\n  @@index([userId])\n  @@map(\"parents\")\n}\n\nmodel Child {\n  childId       BigInt    @id @default(autoincrement()) @map(\"child_id\")\n  userId        BigInt    @map(\"user_id\")\n  name          String\n  birthDate     DateTime? @map(\"birth_date\")\n  gender        String?\n  createdAt     DateTime  @default(now()) @map(\"created_at\")\n  avatarMediaId BigInt?   @map(\"avatar_media_id\")\n  user          User      @relation(fields: [userId], references: [userId])\n\n  @@index([userId])\n  @@map(\"children\")\n}\n",
  "inlineSchemaHash": "58d2fc95f6d5653cfec52716d130d2f982f135a395e98a41cd3a4df3bb5760e6",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"user_id\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"Child\",\"relationName\":\"ChildToUser\"},{\"name\":\"parents\",\"kind\":\"object\",\"type\":\"Parent\",\"relationName\":\"ParentToUser\"}],\"dbName\":\"users\"},\"Parent\":{\"fields\":[{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"parent_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"user_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"birth_date\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pinHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"pin_hash\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"avatarMediaId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"avatar_media_id\"},{\"name\":\"voiceMediaId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"voice_media_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ParentToUser\"}],\"dbName\":\"parents\"},\"Child\":{\"fields\":[{\"name\":\"childId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"child_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"user_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"birth_date\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"avatarMediaId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"avatar_media_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ChildToUser\"}],\"dbName\":\"children\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

