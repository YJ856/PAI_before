
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  childId: 'childId',
  title: 'title',
  initialImageS3Url: 'initialImageS3Url',
  createdAt: 'createdAt',
  endAt: 'endAt'
};

exports.Prisma.QuestionScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  questionText: 'questionText',
  questionOrder: 'questionOrder',
  createdAt: 'createdAt'
};

exports.Prisma.AnswerScalarFieldEnum = {
  id: 'id',
  questionId: 'questionId',
  answerText: 'answerText',
  vqaDirectAnswer: 'vqaDirectAnswer',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Conversation: 'Conversation',
  Question: 'Question',
  Answer: 'Answer'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\SSAFY\\Desktop\\PAI\\S13P21C101\\BE\\apps\\conversation-service\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\SSAFY\\Desktop\\PAI\\S13P21C101\\BE\\apps\\conversation-service\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../generated/client\"\n  binaryTargets = [\"native\", \"debian-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Conversation {\n  id                BigInt    @id @default(autoincrement())\n  childId           BigInt    @map(\"child_id\")\n  title             String?   @map(\"title\")\n  initialImageS3Url String?   @map(\"initial_image_s3_url\")\n  createdAt         DateTime  @default(now()) @map(\"created_at\")\n  endAt             DateTime? @map(\"end_at\")\n\n  questions Question[]\n\n  @@map(\"conversations\")\n}\n\nmodel Question {\n  id             BigInt   @id @default(autoincrement())\n  conversationId BigInt   @map(\"conversation_id\")\n  questionText   String   @map(\"question_text\")\n  questionOrder  Int      @map(\"question_order\")\n  createdAt      DateTime @default(now()) @map(\"created_at\")\n\n  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n  answer       Answer?\n\n  @@index([conversationId, questionOrder])\n  @@map(\"questions\")\n}\n\nmodel Answer {\n  id              BigInt   @id @default(autoincrement())\n  questionId      BigInt   @unique @map(\"question_id\")\n  answerText      String   @map(\"answer_text\")\n  vqaDirectAnswer String?  @map(\"vqa_direct_answer\")\n  createdAt       DateTime @default(now()) @map(\"created_at\")\n\n  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)\n\n  @@map(\"answers\")\n}\n",
  "inlineSchemaHash": "a1a763ff892e1b50fea095323fa9678d948799763af776e421568ce46917b0cc",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Conversation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"childId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"child_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"title\"},{\"name\":\"initialImageS3Url\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"initial_image_s3_url\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"endAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_at\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"ConversationToQuestion\"}],\"dbName\":\"conversations\"},\"Question\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"conversation_id\"},{\"name\":\"questionText\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"question_text\"},{\"name\":\"questionOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"question_order\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToQuestion\"},{\"name\":\"answer\",\"kind\":\"object\",\"type\":\"Answer\",\"relationName\":\"AnswerToQuestion\"}],\"dbName\":\"questions\"},\"Answer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"question_id\"},{\"name\":\"answerText\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"answer_text\"},{\"name\":\"vqaDirectAnswer\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"vqa_direct_answer\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"AnswerToQuestion\"}],\"dbName\":\"answers\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

